// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enum/enum_zc.proto

#ifndef PROTOBUF_enum_2fenum_5fzc_2eproto__INCLUDED
#define PROTOBUF_enum_2fenum_5fzc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace PKENUM {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_enum_2fenum_5fzc_2eproto();
void protobuf_AssignDesc_enum_2fenum_5fzc_2eproto();
void protobuf_ShutdownFile_enum_2fenum_5fzc_2eproto();


enum ZCPacketEnum {
  ZC_BEGIN = 300,
  ZC_ME_CONNECTED = 301,
  ZC_OTHER_USER_CONNECTED = 302,
  ZC_EXIST_USER_INFORMATION = 303,
  ZC_USER_DISCONNECTED = 304,
  ZC_MONSTER_APPEARED = 305,
  ZC_MOVE = 310,
  ZC_MOVE_DEST = 311,
  ZC_STOP = 312,
  ZC_EVADE = 313,
  ZC_DIED = 314,
  ZC_ENTER_FIELD = 320,
  ZC_ATTACK = 330,
  ZC_GET_HIT = 331,
  ZC_DEAD = 332,
  ZC_REVIVE = 333,
  ZC_USE_HP_POTION = 334,
  ZC_PING = 398,
  ZC_END = 399
};
bool ZCPacketEnum_IsValid(int value);
const ZCPacketEnum ZCPacketEnum_MIN = ZC_BEGIN;
const ZCPacketEnum ZCPacketEnum_MAX = ZC_END;
const int ZCPacketEnum_ARRAYSIZE = ZCPacketEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* ZCPacketEnum_descriptor();
inline const ::std::string& ZCPacketEnum_Name(ZCPacketEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    ZCPacketEnum_descriptor(), value);
}
inline bool ZCPacketEnum_Parse(
    const ::std::string& name, ZCPacketEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ZCPacketEnum>(
    ZCPacketEnum_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace PKENUM

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PKENUM::ZCPacketEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PKENUM::ZCPacketEnum>() {
  return ::PKENUM::ZCPacketEnum_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_enum_2fenum_5fzc_2eproto__INCLUDED
