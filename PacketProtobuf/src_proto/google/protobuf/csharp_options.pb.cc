// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/csharp_options.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/protobuf/csharp_options.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* CSharpFileOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSharpFileOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSharpFieldOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSharpFieldOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSharpServiceOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSharpServiceOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSharpMethodOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSharpMethodOptions_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CSharpServiceType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fprotobuf_2fcsharp_5foptions_2eproto() {
  protobuf_AddDesc_google_2fprotobuf_2fcsharp_5foptions_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/protobuf/csharp_options.proto");
  GOOGLE_CHECK(file != NULL);
  CSharpFileOptions_descriptor_ = file->message_type(0);
  static const int CSharpFileOptions_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, namespace__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, umbrella_classname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, public_classes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, multiple_files_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, nest_classes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, code_contracts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, expand_namespace_directories_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, cls_compliance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, add_serializable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, generate_private_ctor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, file_extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, umbrella_namespace_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, output_directory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, ignore_google_protobuf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, service_generator_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, generated_code_attributes_),
  };
  CSharpFileOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSharpFileOptions_descriptor_,
      CSharpFileOptions::default_instance_,
      CSharpFileOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFileOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSharpFileOptions));
  CSharpFieldOptions_descriptor_ = file->message_type(1);
  static const int CSharpFieldOptions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFieldOptions, property_name_),
  };
  CSharpFieldOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSharpFieldOptions_descriptor_,
      CSharpFieldOptions::default_instance_,
      CSharpFieldOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFieldOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpFieldOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSharpFieldOptions));
  CSharpServiceOptions_descriptor_ = file->message_type(2);
  static const int CSharpServiceOptions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpServiceOptions, interface_id_),
  };
  CSharpServiceOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSharpServiceOptions_descriptor_,
      CSharpServiceOptions::default_instance_,
      CSharpServiceOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpServiceOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpServiceOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSharpServiceOptions));
  CSharpMethodOptions_descriptor_ = file->message_type(3);
  static const int CSharpMethodOptions_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpMethodOptions, dispatch_id_),
  };
  CSharpMethodOptions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CSharpMethodOptions_descriptor_,
      CSharpMethodOptions::default_instance_,
      CSharpMethodOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpMethodOptions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSharpMethodOptions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CSharpMethodOptions));
  CSharpServiceType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fprotobuf_2fcsharp_5foptions_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSharpFileOptions_descriptor_, &CSharpFileOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSharpFieldOptions_descriptor_, &CSharpFieldOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSharpServiceOptions_descriptor_, &CSharpServiceOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CSharpMethodOptions_descriptor_, &CSharpMethodOptions::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fprotobuf_2fcsharp_5foptions_2eproto() {
  delete CSharpFileOptions::default_instance_;
  delete CSharpFileOptions_reflection_;
  delete CSharpFileOptions::_default_file_extension_;
  delete CSharpFileOptions::_default_output_directory_;
  delete CSharpFieldOptions::default_instance_;
  delete CSharpFieldOptions_reflection_;
  delete CSharpServiceOptions::default_instance_;
  delete CSharpServiceOptions_reflection_;
  delete CSharpMethodOptions::default_instance_;
  delete CSharpMethodOptions_reflection_;
}

void protobuf_AddDesc_google_2fprotobuf_2fcsharp_5foptions_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n$google/protobuf/csharp_options.proto\022\017"
    "google.protobuf\032 google/protobuf/descrip"
    "tor.proto\"\247\004\n\021CSharpFileOptions\022\021\n\tnames"
    "pace\030\001 \001(\t\022\032\n\022umbrella_classname\030\002 \001(\t\022\034"
    "\n\016public_classes\030\003 \001(\010:\004true\022\026\n\016multiple"
    "_files\030\004 \001(\010\022\024\n\014nest_classes\030\005 \001(\010\022\026\n\016co"
    "de_contracts\030\006 \001(\010\022$\n\034expand_namespace_d"
    "irectories\030\007 \001(\010\022\034\n\016cls_compliance\030\010 \001(\010"
    ":\004true\022\037\n\020add_serializable\030\t \001(\010:\005false\022"
    "#\n\025generate_private_ctor\030\n \001(\010:\004true\022\034\n\016"
    "file_extension\030\335\001 \001(\t:\003.cs\022\033\n\022umbrella_n"
    "amespace\030\336\001 \001(\t\022\034\n\020output_directory\030\337\001 \001"
    "(\t:\001.\022&\n\026ignore_google_protobuf\030\340\001 \001(\010:\005"
    "false\022I\n\026service_generator_type\030\341\001 \001(\0162\""
    ".google.protobuf.CSharpServiceType:\004NONE"
    "\022)\n\031generated_code_attributes\030\342\001 \001(\010:\005fa"
    "lse\"+\n\022CSharpFieldOptions\022\025\n\rproperty_na"
    "me\030\001 \001(\t\",\n\024CSharpServiceOptions\022\024\n\014inte"
    "rface_id\030\001 \001(\t\"*\n\023CSharpMethodOptions\022\023\n"
    "\013dispatch_id\030\001 \001(\005*K\n\021CSharpServiceType\022"
    "\010\n\004NONE\020\000\022\013\n\007GENERIC\020\001\022\r\n\tINTERFACE\020\002\022\020\n"
    "\014IRPCDISPATCH\020\003:^\n\023csharp_file_options\022\034"
    ".google.protobuf.FileOptions\030\350\007 \001(\0132\".go"
    "ogle.protobuf.CSharpFileOptions:a\n\024cshar"
    "p_field_options\022\035.google.protobuf.FieldO"
    "ptions\030\350\007 \001(\0132#.google.protobuf.CSharpFi"
    "eldOptions:g\n\026csharp_service_options\022\037.g"
    "oogle.protobuf.ServiceOptions\030\350\007 \001(\0132%.g"
    "oogle.protobuf.CSharpServiceOptions:d\n\025c"
    "sharp_method_options\022\036.google.protobuf.M"
    "ethodOptions\030\350\007 \001(\0132$.google.protobuf.CS"
    "harpMethodOptions", 1257);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/csharp_options.proto", &protobuf_RegisterTypes);
  CSharpFileOptions::_default_file_extension_ =
      new ::std::string(".cs", 3);
  CSharpFileOptions::_default_output_directory_ =
      new ::std::string(".", 1);
  CSharpFileOptions::default_instance_ = new CSharpFileOptions();
  CSharpFieldOptions::default_instance_ = new CSharpFieldOptions();
  CSharpServiceOptions::default_instance_ = new CSharpServiceOptions();
  CSharpMethodOptions::default_instance_ = new CSharpMethodOptions();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::google::protobuf::FileOptions::default_instance(),
    1000, 11, false, false,
    &::google::protobuf::CSharpFileOptions::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::google::protobuf::FieldOptions::default_instance(),
    1000, 11, false, false,
    &::google::protobuf::CSharpFieldOptions::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::google::protobuf::ServiceOptions::default_instance(),
    1000, 11, false, false,
    &::google::protobuf::CSharpServiceOptions::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::google::protobuf::MethodOptions::default_instance(),
    1000, 11, false, false,
    &::google::protobuf::CSharpMethodOptions::default_instance());
  CSharpFileOptions::default_instance_->InitAsDefaultInstance();
  CSharpFieldOptions::default_instance_->InitAsDefaultInstance();
  CSharpServiceOptions::default_instance_->InitAsDefaultInstance();
  CSharpMethodOptions::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fprotobuf_2fcsharp_5foptions_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2fcsharp_5foptions_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2fcsharp_5foptions_2eproto() {
    protobuf_AddDesc_google_2fprotobuf_2fcsharp_5foptions_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2fcsharp_5foptions_2eproto_;
const ::google::protobuf::EnumDescriptor* CSharpServiceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSharpServiceType_descriptor_;
}
bool CSharpServiceType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

::std::string* CSharpFileOptions::_default_file_extension_ = NULL;
::std::string* CSharpFileOptions::_default_output_directory_ = NULL;
#ifndef _MSC_VER
const int CSharpFileOptions::kNamespaceFieldNumber;
const int CSharpFileOptions::kUmbrellaClassnameFieldNumber;
const int CSharpFileOptions::kPublicClassesFieldNumber;
const int CSharpFileOptions::kMultipleFilesFieldNumber;
const int CSharpFileOptions::kNestClassesFieldNumber;
const int CSharpFileOptions::kCodeContractsFieldNumber;
const int CSharpFileOptions::kExpandNamespaceDirectoriesFieldNumber;
const int CSharpFileOptions::kClsComplianceFieldNumber;
const int CSharpFileOptions::kAddSerializableFieldNumber;
const int CSharpFileOptions::kGeneratePrivateCtorFieldNumber;
const int CSharpFileOptions::kFileExtensionFieldNumber;
const int CSharpFileOptions::kUmbrellaNamespaceFieldNumber;
const int CSharpFileOptions::kOutputDirectoryFieldNumber;
const int CSharpFileOptions::kIgnoreGoogleProtobufFieldNumber;
const int CSharpFileOptions::kServiceGeneratorTypeFieldNumber;
const int CSharpFileOptions::kGeneratedCodeAttributesFieldNumber;
#endif  // !_MSC_VER

CSharpFileOptions::CSharpFileOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.CSharpFileOptions)
}

void CSharpFileOptions::InitAsDefaultInstance() {
}

CSharpFileOptions::CSharpFileOptions(const CSharpFileOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.CSharpFileOptions)
}

void CSharpFileOptions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  namespace__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  umbrella_classname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_classes_ = true;
  multiple_files_ = false;
  nest_classes_ = false;
  code_contracts_ = false;
  expand_namespace_directories_ = false;
  cls_compliance_ = true;
  add_serializable_ = false;
  generate_private_ctor_ = true;
  file_extension_ = const_cast< ::std::string*>(_default_file_extension_);
  umbrella_namespace_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_directory_ = const_cast< ::std::string*>(_default_output_directory_);
  ignore_google_protobuf_ = false;
  service_generator_type_ = 0;
  generated_code_attributes_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSharpFileOptions::~CSharpFileOptions() {
  // @@protoc_insertion_point(destructor:google.protobuf.CSharpFileOptions)
  SharedDtor();
}

void CSharpFileOptions::SharedDtor() {
  if (namespace__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete namespace__;
  }
  if (umbrella_classname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete umbrella_classname_;
  }
  if (file_extension_ != _default_file_extension_) {
    delete file_extension_;
  }
  if (umbrella_namespace_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete umbrella_namespace_;
  }
  if (output_directory_ != _default_output_directory_) {
    delete output_directory_;
  }
  if (this != default_instance_) {
  }
}

void CSharpFileOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSharpFileOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSharpFileOptions_descriptor_;
}

const CSharpFileOptions& CSharpFileOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2fcsharp_5foptions_2eproto();
  return *default_instance_;
}

CSharpFileOptions* CSharpFileOptions::default_instance_ = NULL;

CSharpFileOptions* CSharpFileOptions::New() const {
  return new CSharpFileOptions;
}

void CSharpFileOptions::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CSharpFileOptions*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(multiple_files_, expand_namespace_directories_);
    if (has_namespace_()) {
      if (namespace__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        namespace__->clear();
      }
    }
    if (has_umbrella_classname()) {
      if (umbrella_classname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        umbrella_classname_->clear();
      }
    }
    public_classes_ = true;
    cls_compliance_ = true;
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(service_generator_type_, generated_code_attributes_);
    add_serializable_ = false;
    generate_private_ctor_ = true;
    if (has_file_extension()) {
      if (file_extension_ != _default_file_extension_) {
        file_extension_->assign(*_default_file_extension_);
      }
    }
    if (has_umbrella_namespace()) {
      if (umbrella_namespace_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        umbrella_namespace_->clear();
      }
    }
    if (has_output_directory()) {
      if (output_directory_ != _default_output_directory_) {
        output_directory_->assign(*_default_output_directory_);
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSharpFileOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.CSharpFileOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string namespace = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namespace_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->namespace_().data(), this->namespace_().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "namespace_");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_umbrella_classname;
        break;
      }

      // optional string umbrella_classname = 2;
      case 2: {
        if (tag == 18) {
         parse_umbrella_classname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_umbrella_classname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->umbrella_classname().data(), this->umbrella_classname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "umbrella_classname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_public_classes;
        break;
      }

      // optional bool public_classes = 3 [default = true];
      case 3: {
        if (tag == 24) {
         parse_public_classes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &public_classes_)));
          set_has_public_classes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_multiple_files;
        break;
      }

      // optional bool multiple_files = 4;
      case 4: {
        if (tag == 32) {
         parse_multiple_files:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &multiple_files_)));
          set_has_multiple_files();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_nest_classes;
        break;
      }

      // optional bool nest_classes = 5;
      case 5: {
        if (tag == 40) {
         parse_nest_classes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &nest_classes_)));
          set_has_nest_classes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_code_contracts;
        break;
      }

      // optional bool code_contracts = 6;
      case 6: {
        if (tag == 48) {
         parse_code_contracts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &code_contracts_)));
          set_has_code_contracts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_expand_namespace_directories;
        break;
      }

      // optional bool expand_namespace_directories = 7;
      case 7: {
        if (tag == 56) {
         parse_expand_namespace_directories:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &expand_namespace_directories_)));
          set_has_expand_namespace_directories();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_cls_compliance;
        break;
      }

      // optional bool cls_compliance = 8 [default = true];
      case 8: {
        if (tag == 64) {
         parse_cls_compliance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cls_compliance_)));
          set_has_cls_compliance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_add_serializable;
        break;
      }

      // optional bool add_serializable = 9 [default = false];
      case 9: {
        if (tag == 72) {
         parse_add_serializable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &add_serializable_)));
          set_has_add_serializable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_generate_private_ctor;
        break;
      }

      // optional bool generate_private_ctor = 10 [default = true];
      case 10: {
        if (tag == 80) {
         parse_generate_private_ctor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &generate_private_ctor_)));
          set_has_generate_private_ctor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1770)) goto parse_file_extension;
        break;
      }

      // optional string file_extension = 221 [default = ".cs"];
      case 221: {
        if (tag == 1770) {
         parse_file_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_extension()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_extension().data(), this->file_extension().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "file_extension");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1778)) goto parse_umbrella_namespace;
        break;
      }

      // optional string umbrella_namespace = 222;
      case 222: {
        if (tag == 1778) {
         parse_umbrella_namespace:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_umbrella_namespace()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->umbrella_namespace().data(), this->umbrella_namespace().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "umbrella_namespace");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1786)) goto parse_output_directory;
        break;
      }

      // optional string output_directory = 223 [default = "."];
      case 223: {
        if (tag == 1786) {
         parse_output_directory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_directory()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_directory().data(), this->output_directory().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "output_directory");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1792)) goto parse_ignore_google_protobuf;
        break;
      }

      // optional bool ignore_google_protobuf = 224 [default = false];
      case 224: {
        if (tag == 1792) {
         parse_ignore_google_protobuf:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_google_protobuf_)));
          set_has_ignore_google_protobuf();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1800)) goto parse_service_generator_type;
        break;
      }

      // optional .google.protobuf.CSharpServiceType service_generator_type = 225 [default = NONE];
      case 225: {
        if (tag == 1800) {
         parse_service_generator_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::google::protobuf::CSharpServiceType_IsValid(value)) {
            set_service_generator_type(static_cast< ::google::protobuf::CSharpServiceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(225, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1808)) goto parse_generated_code_attributes;
        break;
      }

      // optional bool generated_code_attributes = 226 [default = false];
      case 226: {
        if (tag == 1808) {
         parse_generated_code_attributes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &generated_code_attributes_)));
          set_has_generated_code_attributes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.CSharpFileOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.CSharpFileOptions)
  return false;
#undef DO_
}

void CSharpFileOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.CSharpFileOptions)
  // optional string namespace = 1;
  if (has_namespace_()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->namespace_().data(), this->namespace_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "namespace_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->namespace_(), output);
  }

  // optional string umbrella_classname = 2;
  if (has_umbrella_classname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->umbrella_classname().data(), this->umbrella_classname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "umbrella_classname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->umbrella_classname(), output);
  }

  // optional bool public_classes = 3 [default = true];
  if (has_public_classes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->public_classes(), output);
  }

  // optional bool multiple_files = 4;
  if (has_multiple_files()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->multiple_files(), output);
  }

  // optional bool nest_classes = 5;
  if (has_nest_classes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->nest_classes(), output);
  }

  // optional bool code_contracts = 6;
  if (has_code_contracts()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->code_contracts(), output);
  }

  // optional bool expand_namespace_directories = 7;
  if (has_expand_namespace_directories()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->expand_namespace_directories(), output);
  }

  // optional bool cls_compliance = 8 [default = true];
  if (has_cls_compliance()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->cls_compliance(), output);
  }

  // optional bool add_serializable = 9 [default = false];
  if (has_add_serializable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->add_serializable(), output);
  }

  // optional bool generate_private_ctor = 10 [default = true];
  if (has_generate_private_ctor()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->generate_private_ctor(), output);
  }

  // optional string file_extension = 221 [default = ".cs"];
  if (has_file_extension()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_extension().data(), this->file_extension().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "file_extension");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      221, this->file_extension(), output);
  }

  // optional string umbrella_namespace = 222;
  if (has_umbrella_namespace()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->umbrella_namespace().data(), this->umbrella_namespace().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "umbrella_namespace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      222, this->umbrella_namespace(), output);
  }

  // optional string output_directory = 223 [default = "."];
  if (has_output_directory()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_directory().data(), this->output_directory().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "output_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      223, this->output_directory(), output);
  }

  // optional bool ignore_google_protobuf = 224 [default = false];
  if (has_ignore_google_protobuf()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(224, this->ignore_google_protobuf(), output);
  }

  // optional .google.protobuf.CSharpServiceType service_generator_type = 225 [default = NONE];
  if (has_service_generator_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      225, this->service_generator_type(), output);
  }

  // optional bool generated_code_attributes = 226 [default = false];
  if (has_generated_code_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(226, this->generated_code_attributes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.CSharpFileOptions)
}

::google::protobuf::uint8* CSharpFileOptions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.CSharpFileOptions)
  // optional string namespace = 1;
  if (has_namespace_()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->namespace_().data(), this->namespace_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "namespace_");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->namespace_(), target);
  }

  // optional string umbrella_classname = 2;
  if (has_umbrella_classname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->umbrella_classname().data(), this->umbrella_classname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "umbrella_classname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->umbrella_classname(), target);
  }

  // optional bool public_classes = 3 [default = true];
  if (has_public_classes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->public_classes(), target);
  }

  // optional bool multiple_files = 4;
  if (has_multiple_files()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->multiple_files(), target);
  }

  // optional bool nest_classes = 5;
  if (has_nest_classes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->nest_classes(), target);
  }

  // optional bool code_contracts = 6;
  if (has_code_contracts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->code_contracts(), target);
  }

  // optional bool expand_namespace_directories = 7;
  if (has_expand_namespace_directories()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->expand_namespace_directories(), target);
  }

  // optional bool cls_compliance = 8 [default = true];
  if (has_cls_compliance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->cls_compliance(), target);
  }

  // optional bool add_serializable = 9 [default = false];
  if (has_add_serializable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->add_serializable(), target);
  }

  // optional bool generate_private_ctor = 10 [default = true];
  if (has_generate_private_ctor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->generate_private_ctor(), target);
  }

  // optional string file_extension = 221 [default = ".cs"];
  if (has_file_extension()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_extension().data(), this->file_extension().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "file_extension");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        221, this->file_extension(), target);
  }

  // optional string umbrella_namespace = 222;
  if (has_umbrella_namespace()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->umbrella_namespace().data(), this->umbrella_namespace().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "umbrella_namespace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        222, this->umbrella_namespace(), target);
  }

  // optional string output_directory = 223 [default = "."];
  if (has_output_directory()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_directory().data(), this->output_directory().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "output_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        223, this->output_directory(), target);
  }

  // optional bool ignore_google_protobuf = 224 [default = false];
  if (has_ignore_google_protobuf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(224, this->ignore_google_protobuf(), target);
  }

  // optional .google.protobuf.CSharpServiceType service_generator_type = 225 [default = NONE];
  if (has_service_generator_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      225, this->service_generator_type(), target);
  }

  // optional bool generated_code_attributes = 226 [default = false];
  if (has_generated_code_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(226, this->generated_code_attributes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.CSharpFileOptions)
  return target;
}

int CSharpFileOptions::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string namespace = 1;
    if (has_namespace_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->namespace_());
    }

    // optional string umbrella_classname = 2;
    if (has_umbrella_classname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->umbrella_classname());
    }

    // optional bool public_classes = 3 [default = true];
    if (has_public_classes()) {
      total_size += 1 + 1;
    }

    // optional bool multiple_files = 4;
    if (has_multiple_files()) {
      total_size += 1 + 1;
    }

    // optional bool nest_classes = 5;
    if (has_nest_classes()) {
      total_size += 1 + 1;
    }

    // optional bool code_contracts = 6;
    if (has_code_contracts()) {
      total_size += 1 + 1;
    }

    // optional bool expand_namespace_directories = 7;
    if (has_expand_namespace_directories()) {
      total_size += 1 + 1;
    }

    // optional bool cls_compliance = 8 [default = true];
    if (has_cls_compliance()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool add_serializable = 9 [default = false];
    if (has_add_serializable()) {
      total_size += 1 + 1;
    }

    // optional bool generate_private_ctor = 10 [default = true];
    if (has_generate_private_ctor()) {
      total_size += 1 + 1;
    }

    // optional string file_extension = 221 [default = ".cs"];
    if (has_file_extension()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_extension());
    }

    // optional string umbrella_namespace = 222;
    if (has_umbrella_namespace()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->umbrella_namespace());
    }

    // optional string output_directory = 223 [default = "."];
    if (has_output_directory()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->output_directory());
    }

    // optional bool ignore_google_protobuf = 224 [default = false];
    if (has_ignore_google_protobuf()) {
      total_size += 2 + 1;
    }

    // optional .google.protobuf.CSharpServiceType service_generator_type = 225 [default = NONE];
    if (has_service_generator_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->service_generator_type());
    }

    // optional bool generated_code_attributes = 226 [default = false];
    if (has_generated_code_attributes()) {
      total_size += 2 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSharpFileOptions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSharpFileOptions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSharpFileOptions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSharpFileOptions::MergeFrom(const CSharpFileOptions& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_namespace_()) {
      set_namespace_(from.namespace_());
    }
    if (from.has_umbrella_classname()) {
      set_umbrella_classname(from.umbrella_classname());
    }
    if (from.has_public_classes()) {
      set_public_classes(from.public_classes());
    }
    if (from.has_multiple_files()) {
      set_multiple_files(from.multiple_files());
    }
    if (from.has_nest_classes()) {
      set_nest_classes(from.nest_classes());
    }
    if (from.has_code_contracts()) {
      set_code_contracts(from.code_contracts());
    }
    if (from.has_expand_namespace_directories()) {
      set_expand_namespace_directories(from.expand_namespace_directories());
    }
    if (from.has_cls_compliance()) {
      set_cls_compliance(from.cls_compliance());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_add_serializable()) {
      set_add_serializable(from.add_serializable());
    }
    if (from.has_generate_private_ctor()) {
      set_generate_private_ctor(from.generate_private_ctor());
    }
    if (from.has_file_extension()) {
      set_file_extension(from.file_extension());
    }
    if (from.has_umbrella_namespace()) {
      set_umbrella_namespace(from.umbrella_namespace());
    }
    if (from.has_output_directory()) {
      set_output_directory(from.output_directory());
    }
    if (from.has_ignore_google_protobuf()) {
      set_ignore_google_protobuf(from.ignore_google_protobuf());
    }
    if (from.has_service_generator_type()) {
      set_service_generator_type(from.service_generator_type());
    }
    if (from.has_generated_code_attributes()) {
      set_generated_code_attributes(from.generated_code_attributes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSharpFileOptions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSharpFileOptions::CopyFrom(const CSharpFileOptions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSharpFileOptions::IsInitialized() const {

  return true;
}

void CSharpFileOptions::Swap(CSharpFileOptions* other) {
  if (other != this) {
    std::swap(namespace__, other->namespace__);
    std::swap(umbrella_classname_, other->umbrella_classname_);
    std::swap(public_classes_, other->public_classes_);
    std::swap(multiple_files_, other->multiple_files_);
    std::swap(nest_classes_, other->nest_classes_);
    std::swap(code_contracts_, other->code_contracts_);
    std::swap(expand_namespace_directories_, other->expand_namespace_directories_);
    std::swap(cls_compliance_, other->cls_compliance_);
    std::swap(add_serializable_, other->add_serializable_);
    std::swap(generate_private_ctor_, other->generate_private_ctor_);
    std::swap(file_extension_, other->file_extension_);
    std::swap(umbrella_namespace_, other->umbrella_namespace_);
    std::swap(output_directory_, other->output_directory_);
    std::swap(ignore_google_protobuf_, other->ignore_google_protobuf_);
    std::swap(service_generator_type_, other->service_generator_type_);
    std::swap(generated_code_attributes_, other->generated_code_attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSharpFileOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSharpFileOptions_descriptor_;
  metadata.reflection = CSharpFileOptions_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSharpFieldOptions::kPropertyNameFieldNumber;
#endif  // !_MSC_VER

CSharpFieldOptions::CSharpFieldOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.CSharpFieldOptions)
}

void CSharpFieldOptions::InitAsDefaultInstance() {
}

CSharpFieldOptions::CSharpFieldOptions(const CSharpFieldOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.CSharpFieldOptions)
}

void CSharpFieldOptions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  property_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSharpFieldOptions::~CSharpFieldOptions() {
  // @@protoc_insertion_point(destructor:google.protobuf.CSharpFieldOptions)
  SharedDtor();
}

void CSharpFieldOptions::SharedDtor() {
  if (property_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete property_name_;
  }
  if (this != default_instance_) {
  }
}

void CSharpFieldOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSharpFieldOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSharpFieldOptions_descriptor_;
}

const CSharpFieldOptions& CSharpFieldOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2fcsharp_5foptions_2eproto();
  return *default_instance_;
}

CSharpFieldOptions* CSharpFieldOptions::default_instance_ = NULL;

CSharpFieldOptions* CSharpFieldOptions::New() const {
  return new CSharpFieldOptions;
}

void CSharpFieldOptions::Clear() {
  if (has_property_name()) {
    if (property_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      property_name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSharpFieldOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.CSharpFieldOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string property_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_property_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->property_name().data(), this->property_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "property_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.CSharpFieldOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.CSharpFieldOptions)
  return false;
#undef DO_
}

void CSharpFieldOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.CSharpFieldOptions)
  // optional string property_name = 1;
  if (has_property_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->property_name().data(), this->property_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "property_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->property_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.CSharpFieldOptions)
}

::google::protobuf::uint8* CSharpFieldOptions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.CSharpFieldOptions)
  // optional string property_name = 1;
  if (has_property_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->property_name().data(), this->property_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "property_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->property_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.CSharpFieldOptions)
  return target;
}

int CSharpFieldOptions::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string property_name = 1;
    if (has_property_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->property_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSharpFieldOptions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSharpFieldOptions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSharpFieldOptions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSharpFieldOptions::MergeFrom(const CSharpFieldOptions& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_property_name()) {
      set_property_name(from.property_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSharpFieldOptions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSharpFieldOptions::CopyFrom(const CSharpFieldOptions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSharpFieldOptions::IsInitialized() const {

  return true;
}

void CSharpFieldOptions::Swap(CSharpFieldOptions* other) {
  if (other != this) {
    std::swap(property_name_, other->property_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSharpFieldOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSharpFieldOptions_descriptor_;
  metadata.reflection = CSharpFieldOptions_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSharpServiceOptions::kInterfaceIdFieldNumber;
#endif  // !_MSC_VER

CSharpServiceOptions::CSharpServiceOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.CSharpServiceOptions)
}

void CSharpServiceOptions::InitAsDefaultInstance() {
}

CSharpServiceOptions::CSharpServiceOptions(const CSharpServiceOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.CSharpServiceOptions)
}

void CSharpServiceOptions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  interface_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSharpServiceOptions::~CSharpServiceOptions() {
  // @@protoc_insertion_point(destructor:google.protobuf.CSharpServiceOptions)
  SharedDtor();
}

void CSharpServiceOptions::SharedDtor() {
  if (interface_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete interface_id_;
  }
  if (this != default_instance_) {
  }
}

void CSharpServiceOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSharpServiceOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSharpServiceOptions_descriptor_;
}

const CSharpServiceOptions& CSharpServiceOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2fcsharp_5foptions_2eproto();
  return *default_instance_;
}

CSharpServiceOptions* CSharpServiceOptions::default_instance_ = NULL;

CSharpServiceOptions* CSharpServiceOptions::New() const {
  return new CSharpServiceOptions;
}

void CSharpServiceOptions::Clear() {
  if (has_interface_id()) {
    if (interface_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      interface_id_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSharpServiceOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.CSharpServiceOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string interface_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->interface_id().data(), this->interface_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "interface_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.CSharpServiceOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.CSharpServiceOptions)
  return false;
#undef DO_
}

void CSharpServiceOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.CSharpServiceOptions)
  // optional string interface_id = 1;
  if (has_interface_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface_id().data(), this->interface_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "interface_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->interface_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.CSharpServiceOptions)
}

::google::protobuf::uint8* CSharpServiceOptions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.CSharpServiceOptions)
  // optional string interface_id = 1;
  if (has_interface_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface_id().data(), this->interface_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "interface_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->interface_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.CSharpServiceOptions)
  return target;
}

int CSharpServiceOptions::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string interface_id = 1;
    if (has_interface_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->interface_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSharpServiceOptions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSharpServiceOptions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSharpServiceOptions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSharpServiceOptions::MergeFrom(const CSharpServiceOptions& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_interface_id()) {
      set_interface_id(from.interface_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSharpServiceOptions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSharpServiceOptions::CopyFrom(const CSharpServiceOptions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSharpServiceOptions::IsInitialized() const {

  return true;
}

void CSharpServiceOptions::Swap(CSharpServiceOptions* other) {
  if (other != this) {
    std::swap(interface_id_, other->interface_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSharpServiceOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSharpServiceOptions_descriptor_;
  metadata.reflection = CSharpServiceOptions_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CSharpMethodOptions::kDispatchIdFieldNumber;
#endif  // !_MSC_VER

CSharpMethodOptions::CSharpMethodOptions()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.CSharpMethodOptions)
}

void CSharpMethodOptions::InitAsDefaultInstance() {
}

CSharpMethodOptions::CSharpMethodOptions(const CSharpMethodOptions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.CSharpMethodOptions)
}

void CSharpMethodOptions::SharedCtor() {
  _cached_size_ = 0;
  dispatch_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CSharpMethodOptions::~CSharpMethodOptions() {
  // @@protoc_insertion_point(destructor:google.protobuf.CSharpMethodOptions)
  SharedDtor();
}

void CSharpMethodOptions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CSharpMethodOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSharpMethodOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSharpMethodOptions_descriptor_;
}

const CSharpMethodOptions& CSharpMethodOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2fcsharp_5foptions_2eproto();
  return *default_instance_;
}

CSharpMethodOptions* CSharpMethodOptions::default_instance_ = NULL;

CSharpMethodOptions* CSharpMethodOptions::New() const {
  return new CSharpMethodOptions;
}

void CSharpMethodOptions::Clear() {
  dispatch_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CSharpMethodOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.CSharpMethodOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dispatch_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dispatch_id_)));
          set_has_dispatch_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.CSharpMethodOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.CSharpMethodOptions)
  return false;
#undef DO_
}

void CSharpMethodOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.CSharpMethodOptions)
  // optional int32 dispatch_id = 1;
  if (has_dispatch_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dispatch_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.CSharpMethodOptions)
}

::google::protobuf::uint8* CSharpMethodOptions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.CSharpMethodOptions)
  // optional int32 dispatch_id = 1;
  if (has_dispatch_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dispatch_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.CSharpMethodOptions)
  return target;
}

int CSharpMethodOptions::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 dispatch_id = 1;
    if (has_dispatch_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dispatch_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSharpMethodOptions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CSharpMethodOptions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CSharpMethodOptions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSharpMethodOptions::MergeFrom(const CSharpMethodOptions& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dispatch_id()) {
      set_dispatch_id(from.dispatch_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CSharpMethodOptions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSharpMethodOptions::CopyFrom(const CSharpMethodOptions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSharpMethodOptions::IsInitialized() const {

  return true;
}

void CSharpMethodOptions::Swap(CSharpMethodOptions* other) {
  if (other != this) {
    std::swap(dispatch_id_, other->dispatch_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CSharpMethodOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSharpMethodOptions_descriptor_;
  metadata.reflection = CSharpMethodOptions_reflection_;
  return metadata;
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::google::protobuf::CSharpFileOptions >, 11, false >
  csharp_file_options(kCsharpFileOptionsFieldNumber, ::google::protobuf::CSharpFileOptions::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::google::protobuf::CSharpFieldOptions >, 11, false >
  csharp_field_options(kCsharpFieldOptionsFieldNumber, ::google::protobuf::CSharpFieldOptions::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::google::protobuf::CSharpServiceOptions >, 11, false >
  csharp_service_options(kCsharpServiceOptionsFieldNumber, ::google::protobuf::CSharpServiceOptions::default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::google::protobuf::CSharpMethodOptions >, 11, false >
  csharp_method_options(kCsharpMethodOptionsFieldNumber, ::google::protobuf::CSharpMethodOptions::default_instance());

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
