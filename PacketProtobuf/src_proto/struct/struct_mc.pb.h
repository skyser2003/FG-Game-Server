// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: struct/struct_mc.proto

#ifndef PROTOBUF_struct_2fstruct_5fmc_2eproto__INCLUDED
#define PROTOBUF_struct_2fstruct_5fmc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace PKS {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_struct_2fstruct_5fmc_2eproto();
void protobuf_AssignDesc_struct_2fstruct_5fmc_2eproto();
void protobuf_ShutdownFile_struct_2fstruct_5fmc_2eproto();

class MC_JOIN_MEMBER_RESULT;
class MC_LOGIN_RESULT;
class MC_SET_FAMILY_NAME_RESULT;

enum MC_JOIN_MEMBER_RESULT_RESULT {
  MC_JOIN_MEMBER_RESULT_RESULT_SUCCESS = 1,
  MC_JOIN_MEMBER_RESULT_RESULT_FAIL = 2
};
bool MC_JOIN_MEMBER_RESULT_RESULT_IsValid(int value);
const MC_JOIN_MEMBER_RESULT_RESULT MC_JOIN_MEMBER_RESULT_RESULT_RESULT_MIN = MC_JOIN_MEMBER_RESULT_RESULT_SUCCESS;
const MC_JOIN_MEMBER_RESULT_RESULT MC_JOIN_MEMBER_RESULT_RESULT_RESULT_MAX = MC_JOIN_MEMBER_RESULT_RESULT_FAIL;
const int MC_JOIN_MEMBER_RESULT_RESULT_RESULT_ARRAYSIZE = MC_JOIN_MEMBER_RESULT_RESULT_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* MC_JOIN_MEMBER_RESULT_RESULT_descriptor();
inline const ::std::string& MC_JOIN_MEMBER_RESULT_RESULT_Name(MC_JOIN_MEMBER_RESULT_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    MC_JOIN_MEMBER_RESULT_RESULT_descriptor(), value);
}
inline bool MC_JOIN_MEMBER_RESULT_RESULT_Parse(
    const ::std::string& name, MC_JOIN_MEMBER_RESULT_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MC_JOIN_MEMBER_RESULT_RESULT>(
    MC_JOIN_MEMBER_RESULT_RESULT_descriptor(), name, value);
}
enum MC_LOGIN_RESULT_RESULT {
  MC_LOGIN_RESULT_RESULT_SUCCESS = 1,
  MC_LOGIN_RESULT_RESULT_FAIL = 2
};
bool MC_LOGIN_RESULT_RESULT_IsValid(int value);
const MC_LOGIN_RESULT_RESULT MC_LOGIN_RESULT_RESULT_RESULT_MIN = MC_LOGIN_RESULT_RESULT_SUCCESS;
const MC_LOGIN_RESULT_RESULT MC_LOGIN_RESULT_RESULT_RESULT_MAX = MC_LOGIN_RESULT_RESULT_FAIL;
const int MC_LOGIN_RESULT_RESULT_RESULT_ARRAYSIZE = MC_LOGIN_RESULT_RESULT_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* MC_LOGIN_RESULT_RESULT_descriptor();
inline const ::std::string& MC_LOGIN_RESULT_RESULT_Name(MC_LOGIN_RESULT_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    MC_LOGIN_RESULT_RESULT_descriptor(), value);
}
inline bool MC_LOGIN_RESULT_RESULT_Parse(
    const ::std::string& name, MC_LOGIN_RESULT_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MC_LOGIN_RESULT_RESULT>(
    MC_LOGIN_RESULT_RESULT_descriptor(), name, value);
}
enum MC_SET_FAMILY_NAME_RESULT_RESULT {
  MC_SET_FAMILY_NAME_RESULT_RESULT_SUCCESS = 1,
  MC_SET_FAMILY_NAME_RESULT_RESULT_FAIL = 2
};
bool MC_SET_FAMILY_NAME_RESULT_RESULT_IsValid(int value);
const MC_SET_FAMILY_NAME_RESULT_RESULT MC_SET_FAMILY_NAME_RESULT_RESULT_RESULT_MIN = MC_SET_FAMILY_NAME_RESULT_RESULT_SUCCESS;
const MC_SET_FAMILY_NAME_RESULT_RESULT MC_SET_FAMILY_NAME_RESULT_RESULT_RESULT_MAX = MC_SET_FAMILY_NAME_RESULT_RESULT_FAIL;
const int MC_SET_FAMILY_NAME_RESULT_RESULT_RESULT_ARRAYSIZE = MC_SET_FAMILY_NAME_RESULT_RESULT_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* MC_SET_FAMILY_NAME_RESULT_RESULT_descriptor();
inline const ::std::string& MC_SET_FAMILY_NAME_RESULT_RESULT_Name(MC_SET_FAMILY_NAME_RESULT_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    MC_SET_FAMILY_NAME_RESULT_RESULT_descriptor(), value);
}
inline bool MC_SET_FAMILY_NAME_RESULT_RESULT_Parse(
    const ::std::string& name, MC_SET_FAMILY_NAME_RESULT_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MC_SET_FAMILY_NAME_RESULT_RESULT>(
    MC_SET_FAMILY_NAME_RESULT_RESULT_descriptor(), name, value);
}
// ===================================================================

class MC_JOIN_MEMBER_RESULT : public ::google::protobuf::Message {
 public:
  MC_JOIN_MEMBER_RESULT();
  virtual ~MC_JOIN_MEMBER_RESULT();

  MC_JOIN_MEMBER_RESULT(const MC_JOIN_MEMBER_RESULT& from);

  inline MC_JOIN_MEMBER_RESULT& operator=(const MC_JOIN_MEMBER_RESULT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MC_JOIN_MEMBER_RESULT& default_instance();

  void Swap(MC_JOIN_MEMBER_RESULT* other);

  // implements Message ----------------------------------------------

  MC_JOIN_MEMBER_RESULT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MC_JOIN_MEMBER_RESULT& from);
  void MergeFrom(const MC_JOIN_MEMBER_RESULT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MC_JOIN_MEMBER_RESULT_RESULT RESULT;
  static const RESULT SUCCESS = MC_JOIN_MEMBER_RESULT_RESULT_SUCCESS;
  static const RESULT FAIL = MC_JOIN_MEMBER_RESULT_RESULT_FAIL;
  static inline bool RESULT_IsValid(int value) {
    return MC_JOIN_MEMBER_RESULT_RESULT_IsValid(value);
  }
  static const RESULT RESULT_MIN =
    MC_JOIN_MEMBER_RESULT_RESULT_RESULT_MIN;
  static const RESULT RESULT_MAX =
    MC_JOIN_MEMBER_RESULT_RESULT_RESULT_MAX;
  static const int RESULT_ARRAYSIZE =
    MC_JOIN_MEMBER_RESULT_RESULT_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RESULT_descriptor() {
    return MC_JOIN_MEMBER_RESULT_RESULT_descriptor();
  }
  static inline const ::std::string& RESULT_Name(RESULT value) {
    return MC_JOIN_MEMBER_RESULT_RESULT_Name(value);
  }
  static inline bool RESULT_Parse(const ::std::string& name,
      RESULT* value) {
    return MC_JOIN_MEMBER_RESULT_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PKS.MC_JOIN_MEMBER_RESULT.RESULT result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::PKS::MC_JOIN_MEMBER_RESULT_RESULT result() const;
  inline void set_result(::PKS::MC_JOIN_MEMBER_RESULT_RESULT value);

  // @@protoc_insertion_point(class_scope:PKS.MC_JOIN_MEMBER_RESULT)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_struct_2fstruct_5fmc_2eproto();
  friend void protobuf_AssignDesc_struct_2fstruct_5fmc_2eproto();
  friend void protobuf_ShutdownFile_struct_2fstruct_5fmc_2eproto();

  void InitAsDefaultInstance();
  static MC_JOIN_MEMBER_RESULT* default_instance_;
};
// -------------------------------------------------------------------

class MC_LOGIN_RESULT : public ::google::protobuf::Message {
 public:
  MC_LOGIN_RESULT();
  virtual ~MC_LOGIN_RESULT();

  MC_LOGIN_RESULT(const MC_LOGIN_RESULT& from);

  inline MC_LOGIN_RESULT& operator=(const MC_LOGIN_RESULT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MC_LOGIN_RESULT& default_instance();

  void Swap(MC_LOGIN_RESULT* other);

  // implements Message ----------------------------------------------

  MC_LOGIN_RESULT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MC_LOGIN_RESULT& from);
  void MergeFrom(const MC_LOGIN_RESULT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MC_LOGIN_RESULT_RESULT RESULT;
  static const RESULT SUCCESS = MC_LOGIN_RESULT_RESULT_SUCCESS;
  static const RESULT FAIL = MC_LOGIN_RESULT_RESULT_FAIL;
  static inline bool RESULT_IsValid(int value) {
    return MC_LOGIN_RESULT_RESULT_IsValid(value);
  }
  static const RESULT RESULT_MIN =
    MC_LOGIN_RESULT_RESULT_RESULT_MIN;
  static const RESULT RESULT_MAX =
    MC_LOGIN_RESULT_RESULT_RESULT_MAX;
  static const int RESULT_ARRAYSIZE =
    MC_LOGIN_RESULT_RESULT_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RESULT_descriptor() {
    return MC_LOGIN_RESULT_RESULT_descriptor();
  }
  static inline const ::std::string& RESULT_Name(RESULT value) {
    return MC_LOGIN_RESULT_RESULT_Name(value);
  }
  static inline bool RESULT_Parse(const ::std::string& name,
      RESULT* value) {
    return MC_LOGIN_RESULT_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PKS.MC_LOGIN_RESULT.RESULT result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::PKS::MC_LOGIN_RESULT_RESULT result() const;
  inline void set_result(::PKS::MC_LOGIN_RESULT_RESULT value);

  // @@protoc_insertion_point(class_scope:PKS.MC_LOGIN_RESULT)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_struct_2fstruct_5fmc_2eproto();
  friend void protobuf_AssignDesc_struct_2fstruct_5fmc_2eproto();
  friend void protobuf_ShutdownFile_struct_2fstruct_5fmc_2eproto();

  void InitAsDefaultInstance();
  static MC_LOGIN_RESULT* default_instance_;
};
// -------------------------------------------------------------------

class MC_SET_FAMILY_NAME_RESULT : public ::google::protobuf::Message {
 public:
  MC_SET_FAMILY_NAME_RESULT();
  virtual ~MC_SET_FAMILY_NAME_RESULT();

  MC_SET_FAMILY_NAME_RESULT(const MC_SET_FAMILY_NAME_RESULT& from);

  inline MC_SET_FAMILY_NAME_RESULT& operator=(const MC_SET_FAMILY_NAME_RESULT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MC_SET_FAMILY_NAME_RESULT& default_instance();

  void Swap(MC_SET_FAMILY_NAME_RESULT* other);

  // implements Message ----------------------------------------------

  MC_SET_FAMILY_NAME_RESULT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MC_SET_FAMILY_NAME_RESULT& from);
  void MergeFrom(const MC_SET_FAMILY_NAME_RESULT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MC_SET_FAMILY_NAME_RESULT_RESULT RESULT;
  static const RESULT SUCCESS = MC_SET_FAMILY_NAME_RESULT_RESULT_SUCCESS;
  static const RESULT FAIL = MC_SET_FAMILY_NAME_RESULT_RESULT_FAIL;
  static inline bool RESULT_IsValid(int value) {
    return MC_SET_FAMILY_NAME_RESULT_RESULT_IsValid(value);
  }
  static const RESULT RESULT_MIN =
    MC_SET_FAMILY_NAME_RESULT_RESULT_RESULT_MIN;
  static const RESULT RESULT_MAX =
    MC_SET_FAMILY_NAME_RESULT_RESULT_RESULT_MAX;
  static const int RESULT_ARRAYSIZE =
    MC_SET_FAMILY_NAME_RESULT_RESULT_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RESULT_descriptor() {
    return MC_SET_FAMILY_NAME_RESULT_RESULT_descriptor();
  }
  static inline const ::std::string& RESULT_Name(RESULT value) {
    return MC_SET_FAMILY_NAME_RESULT_RESULT_Name(value);
  }
  static inline bool RESULT_Parse(const ::std::string& name,
      RESULT* value) {
    return MC_SET_FAMILY_NAME_RESULT_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .PKS.MC_SET_FAMILY_NAME_RESULT.RESULT result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::PKS::MC_SET_FAMILY_NAME_RESULT_RESULT result() const;
  inline void set_result(::PKS::MC_SET_FAMILY_NAME_RESULT_RESULT value);

  // @@protoc_insertion_point(class_scope:PKS.MC_SET_FAMILY_NAME_RESULT)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int result_;
  friend void  protobuf_AddDesc_struct_2fstruct_5fmc_2eproto();
  friend void protobuf_AssignDesc_struct_2fstruct_5fmc_2eproto();
  friend void protobuf_ShutdownFile_struct_2fstruct_5fmc_2eproto();

  void InitAsDefaultInstance();
  static MC_SET_FAMILY_NAME_RESULT* default_instance_;
};
// ===================================================================


// ===================================================================

// MC_JOIN_MEMBER_RESULT

// required .PKS.MC_JOIN_MEMBER_RESULT.RESULT result = 1;
inline bool MC_JOIN_MEMBER_RESULT::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MC_JOIN_MEMBER_RESULT::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MC_JOIN_MEMBER_RESULT::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MC_JOIN_MEMBER_RESULT::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::PKS::MC_JOIN_MEMBER_RESULT_RESULT MC_JOIN_MEMBER_RESULT::result() const {
  // @@protoc_insertion_point(field_get:PKS.MC_JOIN_MEMBER_RESULT.result)
  return static_cast< ::PKS::MC_JOIN_MEMBER_RESULT_RESULT >(result_);
}
inline void MC_JOIN_MEMBER_RESULT::set_result(::PKS::MC_JOIN_MEMBER_RESULT_RESULT value) {
  assert(::PKS::MC_JOIN_MEMBER_RESULT_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:PKS.MC_JOIN_MEMBER_RESULT.result)
}

// -------------------------------------------------------------------

// MC_LOGIN_RESULT

// required .PKS.MC_LOGIN_RESULT.RESULT result = 1;
inline bool MC_LOGIN_RESULT::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MC_LOGIN_RESULT::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MC_LOGIN_RESULT::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MC_LOGIN_RESULT::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::PKS::MC_LOGIN_RESULT_RESULT MC_LOGIN_RESULT::result() const {
  // @@protoc_insertion_point(field_get:PKS.MC_LOGIN_RESULT.result)
  return static_cast< ::PKS::MC_LOGIN_RESULT_RESULT >(result_);
}
inline void MC_LOGIN_RESULT::set_result(::PKS::MC_LOGIN_RESULT_RESULT value) {
  assert(::PKS::MC_LOGIN_RESULT_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:PKS.MC_LOGIN_RESULT.result)
}

// -------------------------------------------------------------------

// MC_SET_FAMILY_NAME_RESULT

// required .PKS.MC_SET_FAMILY_NAME_RESULT.RESULT result = 1;
inline bool MC_SET_FAMILY_NAME_RESULT::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MC_SET_FAMILY_NAME_RESULT::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MC_SET_FAMILY_NAME_RESULT::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MC_SET_FAMILY_NAME_RESULT::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::PKS::MC_SET_FAMILY_NAME_RESULT_RESULT MC_SET_FAMILY_NAME_RESULT::result() const {
  // @@protoc_insertion_point(field_get:PKS.MC_SET_FAMILY_NAME_RESULT.result)
  return static_cast< ::PKS::MC_SET_FAMILY_NAME_RESULT_RESULT >(result_);
}
inline void MC_SET_FAMILY_NAME_RESULT::set_result(::PKS::MC_SET_FAMILY_NAME_RESULT_RESULT value) {
  assert(::PKS::MC_SET_FAMILY_NAME_RESULT_RESULT_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:PKS.MC_SET_FAMILY_NAME_RESULT.result)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PKS

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PKS::MC_JOIN_MEMBER_RESULT_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PKS::MC_JOIN_MEMBER_RESULT_RESULT>() {
  return ::PKS::MC_JOIN_MEMBER_RESULT_RESULT_descriptor();
}
template <> struct is_proto_enum< ::PKS::MC_LOGIN_RESULT_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PKS::MC_LOGIN_RESULT_RESULT>() {
  return ::PKS::MC_LOGIN_RESULT_RESULT_descriptor();
}
template <> struct is_proto_enum< ::PKS::MC_SET_FAMILY_NAME_RESULT_RESULT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PKS::MC_SET_FAMILY_NAME_RESULT_RESULT>() {
  return ::PKS::MC_SET_FAMILY_NAME_RESULT_RESULT_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_struct_2fstruct_5fmc_2eproto__INCLUDED
