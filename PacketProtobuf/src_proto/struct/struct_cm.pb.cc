// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: struct/struct_cm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "struct/struct_cm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PKS {

namespace {

const ::google::protobuf::Descriptor* CM_JOIN_MEMBER_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CM_JOIN_MEMBER_reflection_ = NULL;
const ::google::protobuf::Descriptor* CM_LOGIN_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CM_LOGIN_reflection_ = NULL;
const ::google::protobuf::Descriptor* CM_SET_FAMILY_NAME_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CM_SET_FAMILY_NAME_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_struct_2fstruct_5fcm_2eproto() {
  protobuf_AddDesc_struct_2fstruct_5fcm_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "struct/struct_cm.proto");
  GOOGLE_CHECK(file != NULL);
  CM_JOIN_MEMBER_descriptor_ = file->message_type(0);
  static const int CM_JOIN_MEMBER_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_JOIN_MEMBER, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_JOIN_MEMBER, pw_),
  };
  CM_JOIN_MEMBER_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CM_JOIN_MEMBER_descriptor_,
      CM_JOIN_MEMBER::default_instance_,
      CM_JOIN_MEMBER_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_JOIN_MEMBER, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_JOIN_MEMBER, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CM_JOIN_MEMBER));
  CM_LOGIN_descriptor_ = file->message_type(1);
  static const int CM_LOGIN_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_LOGIN, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_LOGIN, pw_),
  };
  CM_LOGIN_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CM_LOGIN_descriptor_,
      CM_LOGIN::default_instance_,
      CM_LOGIN_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_LOGIN, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_LOGIN, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CM_LOGIN));
  CM_SET_FAMILY_NAME_descriptor_ = file->message_type(2);
  static const int CM_SET_FAMILY_NAME_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_SET_FAMILY_NAME, familyname_),
  };
  CM_SET_FAMILY_NAME_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CM_SET_FAMILY_NAME_descriptor_,
      CM_SET_FAMILY_NAME::default_instance_,
      CM_SET_FAMILY_NAME_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_SET_FAMILY_NAME, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CM_SET_FAMILY_NAME, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CM_SET_FAMILY_NAME));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_struct_2fstruct_5fcm_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CM_JOIN_MEMBER_descriptor_, &CM_JOIN_MEMBER::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CM_LOGIN_descriptor_, &CM_LOGIN::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CM_SET_FAMILY_NAME_descriptor_, &CM_SET_FAMILY_NAME::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_struct_2fstruct_5fcm_2eproto() {
  delete CM_JOIN_MEMBER::default_instance_;
  delete CM_JOIN_MEMBER_reflection_;
  delete CM_LOGIN::default_instance_;
  delete CM_LOGIN_reflection_;
  delete CM_SET_FAMILY_NAME::default_instance_;
  delete CM_SET_FAMILY_NAME_reflection_;
}

void protobuf_AddDesc_struct_2fstruct_5fcm_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026struct/struct_cm.proto\022\003PKS\"(\n\016CM_JOIN"
    "_MEMBER\022\n\n\002id\030\001 \002(\t\022\n\n\002pw\030\002 \002(\t\"\"\n\010CM_LO"
    "GIN\022\n\n\002id\030\001 \002(\t\022\n\n\002pw\030\002 \002(\t\"(\n\022CM_SET_FA"
    "MILY_NAME\022\022\n\nfamilyName\030\001 \002(\t", 149);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "struct/struct_cm.proto", &protobuf_RegisterTypes);
  CM_JOIN_MEMBER::default_instance_ = new CM_JOIN_MEMBER();
  CM_LOGIN::default_instance_ = new CM_LOGIN();
  CM_SET_FAMILY_NAME::default_instance_ = new CM_SET_FAMILY_NAME();
  CM_JOIN_MEMBER::default_instance_->InitAsDefaultInstance();
  CM_LOGIN::default_instance_->InitAsDefaultInstance();
  CM_SET_FAMILY_NAME::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_struct_2fstruct_5fcm_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_struct_2fstruct_5fcm_2eproto {
  StaticDescriptorInitializer_struct_2fstruct_5fcm_2eproto() {
    protobuf_AddDesc_struct_2fstruct_5fcm_2eproto();
  }
} static_descriptor_initializer_struct_2fstruct_5fcm_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CM_JOIN_MEMBER::kIdFieldNumber;
const int CM_JOIN_MEMBER::kPwFieldNumber;
#endif  // !_MSC_VER

CM_JOIN_MEMBER::CM_JOIN_MEMBER()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PKS.CM_JOIN_MEMBER)
}

void CM_JOIN_MEMBER::InitAsDefaultInstance() {
}

CM_JOIN_MEMBER::CM_JOIN_MEMBER(const CM_JOIN_MEMBER& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PKS.CM_JOIN_MEMBER)
}

void CM_JOIN_MEMBER::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pw_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CM_JOIN_MEMBER::~CM_JOIN_MEMBER() {
  // @@protoc_insertion_point(destructor:PKS.CM_JOIN_MEMBER)
  SharedDtor();
}

void CM_JOIN_MEMBER::SharedDtor() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (pw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pw_;
  }
  if (this != default_instance_) {
  }
}

void CM_JOIN_MEMBER::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CM_JOIN_MEMBER::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CM_JOIN_MEMBER_descriptor_;
}

const CM_JOIN_MEMBER& CM_JOIN_MEMBER::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_struct_2fstruct_5fcm_2eproto();
  return *default_instance_;
}

CM_JOIN_MEMBER* CM_JOIN_MEMBER::default_instance_ = NULL;

CM_JOIN_MEMBER* CM_JOIN_MEMBER::New() const {
  return new CM_JOIN_MEMBER;
}

void CM_JOIN_MEMBER::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        id_->clear();
      }
    }
    if (has_pw()) {
      if (pw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        pw_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CM_JOIN_MEMBER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PKS.CM_JOIN_MEMBER)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pw;
        break;
      }

      // required string pw = 2;
      case 2: {
        if (tag == 18) {
         parse_pw:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pw().data(), this->pw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pw");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PKS.CM_JOIN_MEMBER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PKS.CM_JOIN_MEMBER)
  return false;
#undef DO_
}

void CM_JOIN_MEMBER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PKS.CM_JOIN_MEMBER)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string pw = 2;
  if (has_pw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pw().data(), this->pw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pw");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pw(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PKS.CM_JOIN_MEMBER)
}

::google::protobuf::uint8* CM_JOIN_MEMBER::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PKS.CM_JOIN_MEMBER)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string pw = 2;
  if (has_pw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pw().data(), this->pw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pw");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pw(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PKS.CM_JOIN_MEMBER)
  return target;
}

int CM_JOIN_MEMBER::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required string pw = 2;
    if (has_pw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pw());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CM_JOIN_MEMBER::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CM_JOIN_MEMBER* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CM_JOIN_MEMBER*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CM_JOIN_MEMBER::MergeFrom(const CM_JOIN_MEMBER& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_pw()) {
      set_pw(from.pw());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CM_JOIN_MEMBER::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CM_JOIN_MEMBER::CopyFrom(const CM_JOIN_MEMBER& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CM_JOIN_MEMBER::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CM_JOIN_MEMBER::Swap(CM_JOIN_MEMBER* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(pw_, other->pw_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CM_JOIN_MEMBER::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CM_JOIN_MEMBER_descriptor_;
  metadata.reflection = CM_JOIN_MEMBER_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CM_LOGIN::kIdFieldNumber;
const int CM_LOGIN::kPwFieldNumber;
#endif  // !_MSC_VER

CM_LOGIN::CM_LOGIN()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PKS.CM_LOGIN)
}

void CM_LOGIN::InitAsDefaultInstance() {
}

CM_LOGIN::CM_LOGIN(const CM_LOGIN& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PKS.CM_LOGIN)
}

void CM_LOGIN::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pw_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CM_LOGIN::~CM_LOGIN() {
  // @@protoc_insertion_point(destructor:PKS.CM_LOGIN)
  SharedDtor();
}

void CM_LOGIN::SharedDtor() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (pw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pw_;
  }
  if (this != default_instance_) {
  }
}

void CM_LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CM_LOGIN::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CM_LOGIN_descriptor_;
}

const CM_LOGIN& CM_LOGIN::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_struct_2fstruct_5fcm_2eproto();
  return *default_instance_;
}

CM_LOGIN* CM_LOGIN::default_instance_ = NULL;

CM_LOGIN* CM_LOGIN::New() const {
  return new CM_LOGIN;
}

void CM_LOGIN::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        id_->clear();
      }
    }
    if (has_pw()) {
      if (pw_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        pw_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CM_LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PKS.CM_LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pw;
        break;
      }

      // required string pw = 2;
      case 2: {
        if (tag == 18) {
         parse_pw:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pw().data(), this->pw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pw");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PKS.CM_LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PKS.CM_LOGIN)
  return false;
#undef DO_
}

void CM_LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PKS.CM_LOGIN)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string pw = 2;
  if (has_pw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pw().data(), this->pw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pw");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pw(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PKS.CM_LOGIN)
}

::google::protobuf::uint8* CM_LOGIN::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PKS.CM_LOGIN)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string pw = 2;
  if (has_pw()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pw().data(), this->pw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pw");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pw(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PKS.CM_LOGIN)
  return target;
}

int CM_LOGIN::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required string pw = 2;
    if (has_pw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pw());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CM_LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CM_LOGIN* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CM_LOGIN*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CM_LOGIN::MergeFrom(const CM_LOGIN& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_pw()) {
      set_pw(from.pw());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CM_LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CM_LOGIN::CopyFrom(const CM_LOGIN& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CM_LOGIN::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CM_LOGIN::Swap(CM_LOGIN* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(pw_, other->pw_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CM_LOGIN::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CM_LOGIN_descriptor_;
  metadata.reflection = CM_LOGIN_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CM_SET_FAMILY_NAME::kFamilyNameFieldNumber;
#endif  // !_MSC_VER

CM_SET_FAMILY_NAME::CM_SET_FAMILY_NAME()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PKS.CM_SET_FAMILY_NAME)
}

void CM_SET_FAMILY_NAME::InitAsDefaultInstance() {
}

CM_SET_FAMILY_NAME::CM_SET_FAMILY_NAME(const CM_SET_FAMILY_NAME& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PKS.CM_SET_FAMILY_NAME)
}

void CM_SET_FAMILY_NAME::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  familyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CM_SET_FAMILY_NAME::~CM_SET_FAMILY_NAME() {
  // @@protoc_insertion_point(destructor:PKS.CM_SET_FAMILY_NAME)
  SharedDtor();
}

void CM_SET_FAMILY_NAME::SharedDtor() {
  if (familyname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete familyname_;
  }
  if (this != default_instance_) {
  }
}

void CM_SET_FAMILY_NAME::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CM_SET_FAMILY_NAME::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CM_SET_FAMILY_NAME_descriptor_;
}

const CM_SET_FAMILY_NAME& CM_SET_FAMILY_NAME::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_struct_2fstruct_5fcm_2eproto();
  return *default_instance_;
}

CM_SET_FAMILY_NAME* CM_SET_FAMILY_NAME::default_instance_ = NULL;

CM_SET_FAMILY_NAME* CM_SET_FAMILY_NAME::New() const {
  return new CM_SET_FAMILY_NAME;
}

void CM_SET_FAMILY_NAME::Clear() {
  if (has_familyname()) {
    if (familyname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      familyname_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CM_SET_FAMILY_NAME::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PKS.CM_SET_FAMILY_NAME)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string familyName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_familyname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->familyname().data(), this->familyname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "familyname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PKS.CM_SET_FAMILY_NAME)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PKS.CM_SET_FAMILY_NAME)
  return false;
#undef DO_
}

void CM_SET_FAMILY_NAME::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PKS.CM_SET_FAMILY_NAME)
  // required string familyName = 1;
  if (has_familyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->familyname().data(), this->familyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "familyname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->familyname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PKS.CM_SET_FAMILY_NAME)
}

::google::protobuf::uint8* CM_SET_FAMILY_NAME::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PKS.CM_SET_FAMILY_NAME)
  // required string familyName = 1;
  if (has_familyname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->familyname().data(), this->familyname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "familyname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->familyname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PKS.CM_SET_FAMILY_NAME)
  return target;
}

int CM_SET_FAMILY_NAME::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string familyName = 1;
    if (has_familyname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->familyname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CM_SET_FAMILY_NAME::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CM_SET_FAMILY_NAME* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CM_SET_FAMILY_NAME*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CM_SET_FAMILY_NAME::MergeFrom(const CM_SET_FAMILY_NAME& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_familyname()) {
      set_familyname(from.familyname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CM_SET_FAMILY_NAME::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CM_SET_FAMILY_NAME::CopyFrom(const CM_SET_FAMILY_NAME& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CM_SET_FAMILY_NAME::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CM_SET_FAMILY_NAME::Swap(CM_SET_FAMILY_NAME* other) {
  if (other != this) {
    std::swap(familyname_, other->familyname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CM_SET_FAMILY_NAME::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CM_SET_FAMILY_NAME_descriptor_;
  metadata.reflection = CM_SET_FAMILY_NAME_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PKS

// @@protoc_insertion_point(global_scope)
